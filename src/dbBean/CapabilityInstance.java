package dbBean;

// Generated 2-mar-2017 11.54.55 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CapabilityInstance generated by hbm2java
 */
@Entity
@Table(name = "capability_instance", catalog = "musa_db")
public class CapabilityInstance implements java.io.Serializable {

	private Integer idCapabilityInstance;
	private ConcreteCapability concreteCapability;
	private CaseExecution caseExecution;
	private String state;
	private Set<CapabilityLog> capabilityLogs = new HashSet<CapabilityLog>(0);

	public CapabilityInstance() {
	}

	public CapabilityInstance(ConcreteCapability concreteCapability,
			CaseExecution caseExecution, String state,
			Set<CapabilityLog> capabilityLogs) {
		this.concreteCapability = concreteCapability;
		this.caseExecution = caseExecution;
		this.state = state;
		this.capabilityLogs = capabilityLogs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idCapability_Instance", unique = true, nullable = false)
	public Integer getIdCapabilityInstance() {
		return this.idCapabilityInstance;
	}

	public void setIdCapabilityInstance(Integer idCapabilityInstance) {
		this.idCapabilityInstance = idCapabilityInstance;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idCapability")
	public ConcreteCapability getConcreteCapability() {
		return this.concreteCapability;
	}

	public void setConcreteCapability(ConcreteCapability concreteCapability) {
		this.concreteCapability = concreteCapability;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idCase")
	public CaseExecution getCaseExecution() {
		return this.caseExecution;
	}

	public void setCaseExecution(CaseExecution caseExecution) {
		this.caseExecution = caseExecution;
	}

	@Column(name = "state")
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "capabilityInstance")
	public Set<CapabilityLog> getCapabilityLogs() {
		return this.capabilityLogs;
	}

	public void setCapabilityLogs(Set<CapabilityLog> capabilityLogs) {
		this.capabilityLogs = capabilityLogs;
	}

}

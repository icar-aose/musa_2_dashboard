function popupCredits(url, title, w, h) {
var left = (screen.width/2)-(w/2);
var top = (screen.height/2)-(h/2);
return window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left);
} 

function popupDialog() {
	 $( "#dialog" ).dialog({
		 width: 400
	 });
}


function cleanForm(){
	console.log("call CALEAN FORM"+$( "#motivation" ).val());
	console.log("call DB FORM"+$( "#motivationDB" ).val());
	$( "#motivation" ).val($( "#motivationDB" ).val());
}
function validateForm(){
	console.log("EDITED MOTIVATION-->"+$("#motivation").val());
	if ($( "#motivation" ).val()=="")
		{
		alert("ACTION NOT EXECUTED! INSERT A MOTIVATION");
	     // $('#saveMotivationButton').attr('disabled', 'true'); // updated according to http://stackoverflow.com/questions/7637790/how-to-remove-disabled-attribute-with-jquery-ie
		 return false;
		}
		else
		{
		// $('#saveMotivationButton').removeAttr('disabled');
		console.log("ENABLE BUTTUON");
		}
}
function changeValue(ele){
	//alert("CAMBIA");
	var elem = $(ele);
	console.log("VALUE CHANGE eccolo-->"+elem.val());
	if (elem.val()=="")
	{
	  $('#saveMotivationButton').attr('disabled', 'true'); // updated according to http://stackoverflow.com/questions/7637790/how-to-remove-disabled-attribute-with-jquery-ie
     return false;
	}
	else
	{
	 $('#saveMotivationButton').removeAttr('disabled');
	console.log("ENABLE BUTTUON");
	}
	
}

function enableSubmitButton(){
	console.log("USER SELECTED"+  $('#idUser').val());
	var idUserSelected=$('#idUser').val();
	if(idUserSelected!='none'){
		console.log("ENABLE BUTTN");
		 $('#loadDomainButton').removeAttr('disabled');
			
	}
	else
		 $('#loadDomainButton').attr('disabled', 'true');
}
function test(ele){
	var elem = $(ele);

	console.log("VALUE FOCUS-->"+elem.val());
	
}
function newFunctionalReq(sizeFunctionalReq){
	$( "#nameNewFunctionalReq" ).val("goal_"+sizeFunctionalReq);
	$( "#typeNewFunctionalReq" ).val("manual");
	$( "#currentStateNewFunctionalReq" ).val("waiting");
	console.log("sizeFunctionalReq:"+sizeFunctionalReq);

}
function enableDiv(idDiv,idForm) {
//	$( "#newConfDiv" ).show();
	
	$( "#"+idDiv).show();
	$( "#idInput" ).val(null);
	$( "#nameInput" ).val("");
	$( "#valueInput" ).val("");
	$( "#typeInput" ).val("");
	
	$( "#descriptionInput" ).val("");
	$( "#inputInput" ).val("");
	$( "#outputInput" ).val("");
	$( "#paramsInput" ).val("");
	$( "#preConditionInput" ).val("");
	$( "#postConditionInput" ).val("");
	resetForm(idForm);
	//imposto i valori di default per i nuovi inserimenti
	$( "#nameNewFunctionalReq" ).val("goal_");
	$( "#typeNewFunctionalReq" ).val("manual");
	$( "#currentStateNewFunctionalReq" ).val("waiting");
	console.log("end FORM");
	}

function disableDiv(idDiv){
	$( "#"+idDiv).hide();
//	$( "#newConfDiv" ).hide();
}
function setEnabled(idDiv){
	console.log("call setEnabled: "+idDiv);
	$( "#"+idDiv).show();
//	$( "#newConfDiv" ).show();
}


function resetForm(form) {
	console.log("RESETE FORM");
	  $(':input', form).each(function() {
	    var type = this.type;
	    var tag = this.tagName.toLowerCase();
//	    if(type == 'hidden' )
//	    	  this.value = "";
//	    else
	    	if (type == 'text' || type == 'password' || tag == 'textarea')
	      this.value = "";
	    else if (type == 'checkbox' || type == 'radio')
	      this.checked = false;
	    else if (tag == 'select')
	      this.selectedIndex = -1;
	  });
	};
	
function verifyGoalProcessExist(idProcess,idSpecification,idDomain){
	var returnStatement=true;
	console.log("call verifyGoalProcessExist-->"+idProcess);
	$.ajax({
	    url : "verifyGoalsProcessExist.action?idWorkflow="+idProcess,
	    type : "POST",
	    success : function(data) {
	    	if(data=="true")
	    		{
	    		console.log("DATA TRUE");
	    		if(confirm("A set of functional requirements have been already generated by this diagram.\nPlease, note that confirming this action the tool will update these automatically generated requirements.\nThe requirements that have been manually modified will not be touch by this operation!"))
	    			{
	    			console.log("CALL ACTION");
	    			callGenerateGoalsAction(idProcess,idSpecification,idDomain);
	    			return;
	    				}
	    			
	    		}
	    			else{
	    				
	    			console.log("returnStatement-->"+returnStatement);
	    			callGenerateGoalsAction(idProcess,idSpecification,idDomain);
	    			return;
	    			}
	     
	    }
	});
	
}

function verifyProposalExist(idAbstratCapability,idDomainFunction){
		console.log("ID DOMANIN --_>>>>>"+idDomainFunction);
	$.ajax({
	    url : "verifyProposalExist.action?idAbstratCapability="+idAbstratCapability,
	    type : "POST",
	    success : function(data) {
	    	if(data=="true")
	    		{
	    		console.log("DATA TRUE");
	    		if(confirm("Proposal for this abstract capability will refused automatically.Confirming this action?"))
	    			{
	    			console.log("CALL ACTION");
	    			//change stra proposa to refused
	    			callchangeStateProposal(idAbstratCapability,idDomainFunction);
    	    			
	    			return;
	    				}
	    			
	    		}
	    			else{
	    				console.log("ID DOMANIN 222_>>>>>"+idDomainFunction);
	    				callDeleteAbstractCapability(idAbstratCapability,idDomainFunction);
	    	    		
	    			
	    		    return;
	    			}
	     
	    }
	});
	
}
function callchangeStateProposal(idAbstratCapability,idDomain){

	console.log("callchangeStateProposal , DOMAIN:"+idDomain);
	$.ajax({
	    url : "changeStateProposal.action?idAbstratCapability="+idAbstratCapability,
	    type : "POST",
	    success : function(data) {
	    	callDeleteAbstractCapability(idAbstratCapability,idDomain);
	    	//window.location='listDomainAbstractCapabilities.action?idDomain='+idDomain;
	    }
	    });

	}




function callDeleteAbstractCapability(idAbstratCapability,idDomainFunction){
	console.log("callDeleteAbstractCapability:"+idDomainFunction);
	$.ajax({
	    url : "deleteDomainAbstractCapabilities.action?id="+idAbstratCapability+"&idDomain="+idDomainFunction,
	    type : "POST",
	    success : function(data) {
	    	//console.log ("ABSTRACT CAPABILITY DELETED!");
	    	window.location='listDomainAbstractCapabilities.action?idDomain='+idDomainFunction;
	    }
	    });

	}

function callGenerateGoalsAction(idProcess,idSpecification,idDomain){
	console.log("callGenerateGoalsAction");
	$.ajax({
	    url : "generateGoals.action?idWorkflow="+idProcess+"&idSpecification="+idSpecification+"&idDomain="+idDomain,
	    type : "POST",
	    success : function(data) {
	    	alert ("FUNCTIONAL REQUIREMENTS GENERATED!");
	    }
	    });
	
	}
